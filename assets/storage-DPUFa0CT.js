const a="sigmapay_contacts",g="sigmapay_transactions",r="sigmapay_groups",c=()=>JSON.parse(localStorage.getItem(a)||"[]"),S=s=>{const n=c(),t={...s,id:Date.now().toString(),createdAt:new Date().toISOString()};return n.push(t),localStorage.setItem(a,JSON.stringify(n)),t},l=(s,n)=>{const t=c(),o=t.findIndex(e=>e.id===s);return o!==-1?(t[o]={...t[o],...n},localStorage.setItem(a,JSON.stringify(t)),t[o]):null},d=s=>{const t=c().filter(o=>o.id!==s);localStorage.setItem(a,JSON.stringify(t))},u=()=>JSON.parse(localStorage.getItem(g)||"[]"),p=s=>{const n=u(),t={...s,id:`TX-${Date.now()}`,date:new Date().toISOString(),status:"completed"};return n.unshift(t),localStorage.setItem(g,JSON.stringify(n)),t},m=s=>u().find(t=>t.id===s),i=()=>JSON.parse(localStorage.getItem(r)||"[]"),f=s=>{const n=i(),t={...s,id:Date.now().toString(),createdAt:new Date().toISOString(),members:[],contributions:[]};return n.push(t),localStorage.setItem(r,JSON.stringify(n)),t},O=(s,n)=>{const t=i(),o=t.find(e=>e.id===s);return o&&!o.members.includes(n)?(o.members.push(n),localStorage.setItem(r,JSON.stringify(t)),o):null},I=(s,n)=>{const t=i(),o=t.find(e=>e.id===s);return o?(o.contributions.push({...n,id:Date.now().toString(),date:new Date().toISOString()}),localStorage.setItem(r,JSON.stringify(t)),o):null};export{p as a,u as b,i as c,d,I as e,f,c as g,m as h,O as j,S as s,l as u};
